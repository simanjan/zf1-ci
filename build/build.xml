<?xml version="1.0" encoding="UTF-8"?>
<project name="zf1-ci" default="build" basedir=".">

	<property name="jslint4java.file" value="/lib/jslint4java-2.0.2/jslint4java-2.0.2.jar"/>





	<target name="build" depends="prepare,lint,zf,testing,loc,depend,cpd,code-sniffer,md,api,code-browser" />

	<target name="setup-filesets">

		<patternset id="all">
			<include name="application/**/*"/>
			<include name="build/**/*"/>
			<include name="library/**/*"/>
			<include name="public/**/*"/>
			<include name="tests/**/*"/>
			<exclude name="library/Phing/**/*"/>
			<exclude name="library/Zend/**/*"/>
		</patternset>

		<patternset id="php-application">
			<include name="application/**/*.php"/>
			<include name="build/**/*.php"/>
			<include name="library/**/*.php"/>
			<include name="public/**/*.php"/>
			<include name="tests/**/*.php"/>
			<exclude name="library/Phing/**/*"/>
			<exclude name="library/Zend/**/*"/>
			<exclude name="tests/**/*Test.php"/>
		</patternset>

		<patternset id="php-tests">
			<include name="tests/**/*Test.php"/>
		</patternset>

		<patternset id="js">
			<include name="public/**/*.js" />
		</patternset>

		<patternset id="css">
			<include name="public/**/*.css" />
		</patternset>

		<fileset id="src.all" dir=".">
			<patternset refid="all"/>
		</fileset>

		<fileset id="src.php.all" dir=".">
			<patternset refid="php-application"/>
			<patternset refid="php-tests"/>
		</fileset>

		<fileset id="src.php.app" dir=".">
			<patternset refid="php-application"/>
		</fileset>

		<fileset id="src.php.tests" dir=".">
			<patternset refid="php-tests"/>
		</fileset>

		<fileset id="src.js" dir=".">
			<patternset refid="js" />
		</fileset>

		<fileset id="src.css" dir=".">
			<patternset refid="css" />
		</fileset>

	</target>

	<target name="clean" description="Cleanup build workspace">
		<delete includeemptydirs="true">
			<fileset dir=".">
				<include name="artefacts/**/*"/>
				<exclude name="artefacts/cache/**/*"/>
			</fileset>
		</delete>
	</target>

	<target name="prepare" depends="setup-filesets,clean" description="Prepare for build">
		<mkdir dir="artefacts"/>
		<mkdir dir="artefacts/api"/>
		<mkdir dir="artefacts/cache"/>
		<mkdir dir="artefacts/coverage"/>
		<mkdir dir="artefacts/reports"/>
	</target>

	<target name="lint" description="Checking files for errors" depends="lint-php,lint-js" />

	<target name="lint-php" description="Checking files for errors">
		<phplint level="verbose" deprecatedaserror="true" cachefile="cache/php-lint.cache" haltonfailure="true" description="Checking PHP files for errors">
			<fileset refid="src.php.all" />
		</phplint>
	</target>

	<target name="lint-js" description="Checking JavaScript files using JSlint">
		<jsllint cachefile="cache/js-lint.cache" executable="/lib/jsl-0.3.0/src" description="Checking JavaScript files for errors">
			<fileset refid="src.js" />
		</jsllint>
	</target>

	<!--<target name="lint-js" description="Checking JavaScript files using JSlint"-->
	        <!--depends="setup-jslint4java,setup-jslint">-->
		<!--<foreach target="lint-js-file" param="filename" absparam="absfilename">-->
			<!--<fileset refid="src.js"/>-->
		<!--</foreach>-->
	<!--</target>-->

	<!--<target name="lint-js-file">-->
		<!--<echo>Linting file: ${absfilename}</echo>-->
		<!--<exec command="java -jar ${jslint4java.file}-->
               <!----jslint ${jslint.file} --report checkstyle ${absfilename}"-->
		      <!--outputProperty="report" />-->
		<!--<php function="str_replace" returnProperty="filename.normalized">-->
			<!--<param value="/" />-->
			<!--<param value="-" />-->
			<!--<param value="${filename}" />-->
		<!--</php>-->
		<!--<delete file="artefacts/reports/checkstyle-jslint-${filename.normalized}.xml" />-->
		<!--<append text="${report}" destFile="artefacts/reports/checkstyle-jslint-${filename.normalized}.xml" />-->
	<!--</target>-->

	<!--<target name="setup-jslint">-->
		<!--<phingcall target="setup-git-repo">-->
			<!--<property name="repo.dir" value="${project.toolsdir}/jslint"/>-->
			<!--<property name="repo.url" value="${jslint.repository.url}" />-->
		<!--</phingcall>-->
		<!--<property name="jslint.file"-->
		          <!--value="${project.toolsdir}/jslint/${jslint.file}"-->
		          <!--override="true" />-->
		<!--<property name="project.jslint.setup" value="true" />-->
	<!--</target>-->

	<!--<property name="jslint" value="./path/to/jslint/jsl-0.3.0-mac/jsl" />-->
	<!--<echo msg="Checking JS for errors..." />-->
	<!--<jsllint haltonfailure="true" cachefile="./jslint.cache" executable="${jslint}" conffile="./path/to/jslint/jsl.default.conf">-->
		<!--<fileset dir="./js">-->
			<!--<include name="**/*.js"/>-->
		<!--</fileset>-->
	<!--</jsllint>-->

	<target name="zf" description="Creating symlink to Zend Framework">
		<symlink target="/lib/ZendFramework-1.11.11/library/Zend" link="${project.basedir}/library/Zend"/>
	</target>

	<target name="testing" description="Run unit tests with PHPUnit">
		<!-- The CoverageSetupTask prepares a database which can be used to gather code coverage information for unit tests. -->
		<coverage-setup database="artefacts/coverage/coverage.db">
			<fileset refid="src.php.app" />
		</coverage-setup>

		<!-- This task runs testcases using the PHPUnit framework. It is a functional port of the Ant JUnit task. -->
		<phpunit bootstrap="tests/bootstrap.php" codecoverage="true" printsummary="true">
			<formatter type="xml" todir="artefacts/reports" outfile="junit.xml"/>
			<formatter type="clover" todir="artefacts/reports" outfile="clover.xml"/>
			<batchtest>
				<fileset refid="src.php.tests" />
			</batchtest>
		</phpunit>

		<!-- The CoverageReportTask formats a coverage database into a framed HTML report using XSLT. The report can optionally make use of the Generic Syntax Highlighting library, GeSHi (See GeSHi Homepage) library to mark up source code. The path to the library (if not in the default path) can be specified as an attribute. -->
		<coverage-report outfile="artefacts/coverage/coverage.db">
			<report toDir="artefacts/coverage" title="zf1-ci coverage report"/>
		</coverage-report>
	</target>

	<taskdef name="phploc" classname="phing.tasks.custom.PHPLocTask" />

	<target name="loc">
		<tstamp>
			<format property="check.date.time" pattern="%Y%m%d-%H%M%S" locale="en_US"/>
		</tstamp>
		<!--<phploc reportType="csv" reportName="${check.date.time}-report" reportDirectory="artefacts/reports/phploc" countTests="true">-->
		<phploc reportType="cli" reportName="phploc" reportDirectory="artefacts/reports" countTests="true">
			<fileset refid="src.php.app" />
		</phploc>
	</target>

	<target name="depend" description="Run PHP_Depend, a software analyzer and metric tool for PHP Code">
		<phpdepend>
			<fileset refid="src.php.app" />
			<logger type="jdepend-xml" outfile="artefacts/reports/jdepend.xml"/>
			<logger type="jdepend-chart" outfile="artefacts/reports/dependencies.svg"/>
			<logger type="overview-pyramid" outfile="artefacts/reports/overview-pyramid.svg"/>
		</phpdepend>
	</target>

	<target name="cpd" description="Run phpcpd, a Copy/Paste Detector (CPD) for PHP Code">
		<phpcpd minLines="3" minTokens="40">
			<fileset refid="src.php.app" />
			<formatter type="pmd" outfile="artefacts/reports/pmd-cpd.xml"/>
		</phpcpd>
	</target>

	<target name="code-sniffer" description="Run PHP_CodeSniffer to detect violations of a defined set of coding standards">
		<phpcodesniffer standard="Zend" format="checkstyle">
			<fileset refid="src.php.all" />
			<!--<config name="zend_ca_path" value="/path/to/ZendStudio/bin/ZendCodeAnalyzer"/>-->
			<formatter type="default" usefile="false"/>
			<formatter type="checkstyle" outfile="artefacts/reports/checkstyle.xml"/>
		</phpcodesniffer>
	</target>

	<target name="md" description="Run phpmd, a Project Mess Detector (PMD) for PHP Code">
		<!--<phpmd rulesets="codesize,design,unusedcode">-->
		<phpmd rulesets="build/phpmd.xml">
			<fileset refid="src.php.all" />
			<formatter type="xml" outfile="artefacts/reports/pmd.xml"/>
		</phpmd>
	</target>

	<target name="api" description="Run phpDocumentor 2, API documentation tool">
		<mkdir dir="artefacts/api"/>
		<touch file="artefacts/api/index.html" />
		<!--<phpdoc2 title="API Documentation" destdir="artefacts/api" template="responsive">-->
			<!--<fileset dir=".">-->
				<!--<include name="application/**/*.php"/>-->
				<!--<include name="public/**/*.php"/>-->
			<!--</fileset>-->
		<!--</phpdoc2>-->
	</target>

	<target name="code-browser" description="Aggregate tool output with PHP_CodeBrowser">
		<mkdir dir="artefacts/code-browser"/>
		<touch file="artefacts/code-browser/index.html" />
		<exec command="phpcb  --log artefacts/reports --source application --output artefacts/code-browser" logoutput="true" />
	</target>

</project>
